apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
type: Opaque
data:
  DB_HOST: amRiYzpwb3N0Z3Jlc3FsOi8vbXktcG9zdGdyZXMtcG9zdGdyZXNxbDo1NDMzL3NvbWVfZGI=
  DB_PORT: NTQzMw==
  DB_NAME: c29tZV9kYg==
  DB_USER: c29tZV91c2Vy
  DB_PASSWORD: c29tZV9wYXNzd29yZA==

---
apiVersion: batch/v1
kind: Job
metadata:
  name: flyway-job
spec:
  template:
    spec:
      containers:
        - name: flyway-job
          image: 89629417575/lesson7-sql-2
          imagePullPolicy: Always
          env:
            - name: FLYWAY_URL
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_HOST
            - name: FLYWAY_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_USER
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_PASSWORD
      restartPolicy: Never
  backoffLimit: 4

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp-container
          image: 89629417575/lesson7-image-2
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: myapp-service
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: arch.homework
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp-service
                port:
                  number: 80
---
controller:
  kind: DaemonSet

  reportNodeInternalIp: true

  hostPort:
    enabled: true
    ports:
      http: 80
      https: 443

  service:
    type: NodePort